name: Validate and pre-release

on:
  pull_request:
  push:
    branches:
      - main

env:
  version_guidance: prepatch
  image: ghcr.io/uwit-iam/common-build-scripts

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Run all tests
    steps:
      - run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - uses: actions/checkout@v2
      - run: ./run-tests.sh
      - name: Test installer
        env:
          BUILD_SCRIPTS_DIR: /tmp/build-scripts
          URL: https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/scripts/install-common-build-scripts.sh
        run: |
          test ! -d "${BUILD_SCRIPTS_DIR}"
          bash <(curl -s $URL)
          test -f "${BUILD_SCRIPTS_DIR}/.VERSION"

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [validate]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    name: Release new version
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        id: get-pull-request
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - if: contains(steps.get-pull-request.outputs.labels, 'Version Guidance')
        env:
          labels: ${{ steps.get-pull-request.outputs.labels }}
        run: |
          # Label will look like 'Version Guidance:patch"
          guidance=$(echo "$labels" | grep 'Version Guidance' | cut -f2 -d:)
          echo "version_guidance=$guidance" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ env.version_guidance }}

      - env:
          semver_tag: ${{ env.image }}:${{ steps.bump-semver.outputs.new_version }}
          prepatch_tag: ${{ env.image }}:prepatch
        run: |
          docker build . -t $semver_tag
          docker tag $semver_tag $prepatch_tag
          docker push $semver_tag
          docker push $prepatch_tag

      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: >
            ${{ steps.bump-semver.outputs.new_version }}:
            PR #${{ steps.get-pull-request.outputs.number }}
            ${{ steps.get-pull-request.outputs.title }}
